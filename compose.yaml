services:
  
  bookit.api:
    image: bookit.api
    restart: always
    container_name: BookIt.Api
    build:
      context: .
      dockerfile: src/BookIt.Api/Dockerfile
      args:
        configuration: "Development"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5050
      - ConnectionStrings__Database=Host=bookit-db;Port=5432;Database=bookit;Username=postgres;Password=password;
    ports:
      - "5050:5050"   # Exposes HTTP endpoint
      - "7123:7123"
    depends_on:
      bookit-db:
        condition: service_healthy
      bookit-idp:
        condition: service_started
  
  bookit-db:
    image: postgres:latest
    restart: always
    container_name: BookIt.Db
    environment:
      - POSTGRES_DB=bookit
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ./.containers/database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  bookit-idp:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    container_name: BookIt.Identity
    command: ["start-dev", "--import-realm"]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./.files/bookit-realm-export.json:/opt/keycloak/data/import/realm.json
    ports:
      - "18080:8080"
        
  bookit-seq:
    image: datalust/seq:latest
    container_name: BookIt.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
    
